{"ast":null,"code":"var _jsxFileName = \"/Users/endor/Flatiron/code/the-leak/client/src/components/UserPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserLocationCard from './UserLocationCard';\nimport UserReviewCard from './UserReviewCard';\nimport { MyContext } from '../context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPage = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(MyContext);\n  const {\n    reviews\n  } = useContext(MyContext);\n  const {\n    locations\n  } = useContext(MyContext);\n  const {\n    loggedIn\n  } = useContext(MyContext);\n  const {\n    updateReview\n  } = useContext(MyContext);\n  const {\n    deleteReview\n  } = useContext(MyContext);\n  const {\n    locationTypes\n  } = useContext(MyContext);\n  const navigate = useNavigate();\n  const [myReviews, setMyReviews] = useState([]);\n  useEffect(() => {\n    if (!loggedIn) {\n      navigate('/login');\n    }\n  }, [loggedIn, navigate]);\n  useEffect(() => {\n    if (loggedIn) {\n      if (reviews) {\n        setMyReviews(reviews.filter(myReviews => myReviews.user_id === currentUser.id));\n      }\n    }\n  }, [loggedIn, currentUser.id, reviews]);\n  const myList = myReviews.map(review => /*#__PURE__*/_jsxDEV(UserLocationCard, {\n    review: review,\n    loggedIn: loggedIn,\n    deleteReview: deleteReview,\n    locationTypes: locationTypes\n  }, review.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 42\n  }, this));\n\n  const reviewCards = () => {\n    if (myReviews) {\n      return myReviews.map(review => /*#__PURE__*/_jsxDEV(UserReviewCard, {\n        review: review,\n        locations: locations,\n        updateReview: updateReview,\n        loggedIn: loggedIn\n      }, review.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-greeting\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"greeting\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Hi, \", currentUser.username, \"! Here are your saved locations:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Reviews:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), reviewCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPage, \"ztnuPBMu+RBsjJpIxQ5YBIeSIB0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","UserLocationCard","UserReviewCard","MyContext","UserPage","currentUser","reviews","locations","loggedIn","updateReview","deleteReview","locationTypes","navigate","myReviews","setMyReviews","filter","user_id","id","myList","map","review","reviewCards","username"],"sources":["/Users/endor/Flatiron/code/the-leak/client/src/components/UserPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserLocationCard from './UserLocationCard';\nimport UserReviewCard from './UserReviewCard';\nimport { MyContext } from '../context/MyContext';\n\n\nconst UserPage = () => {\n  const {currentUser} = useContext(MyContext);\n  const {reviews} = useContext(MyContext);\n  const {locations} = useContext(MyContext);\n  const {loggedIn} = useContext(MyContext);\n  const {updateReview} = useContext(MyContext);\n  const {deleteReview} = useContext(MyContext);\n  const {locationTypes} = useContext(MyContext);\n\n\n  const navigate = useNavigate();\n  const [myReviews, setMyReviews] = useState([]);\n  \n  \n  useEffect(() => {\n    if( !loggedIn ) {\n        navigate('/login');\n    }\n  }, [loggedIn, navigate])\n\n  useEffect(() => {\n    if( loggedIn ) {\n      if (reviews) {\n        setMyReviews(reviews.filter(myReviews => myReviews.user_id === currentUser.id))\n      }\n    }\n  }, [loggedIn, currentUser.id, reviews])\n\n  \n  const myList = myReviews.map(review => <UserLocationCard key={ review.id } review={ review } loggedIn={ loggedIn } deleteReview={ deleteReview } locationTypes={ locationTypes } />)\n  \n\n\n  const reviewCards = () => {\n    if (myReviews) {\n      return myReviews.map(review => <UserReviewCard key={ review.id } review={ review } locations={ locations } updateReview={ updateReview } loggedIn={ loggedIn } />)\n    }\n  }\n\n  return (\n    <div>\n      <div id=\"user-greeting\">\n        <div id=\"greeting\">\n          <h1>Hi, { currentUser.username }! Here are your saved locations:</h1>\n        </div>\n      </div>\n      <br/>\n      <div>\n        { myList }\n      </div>\n      <div id=\"reviews\">\n        <h1>Your Reviews:</h1>\n        { reviewCards() }\n      </div>\n    </div>\n\n  )\n}\n\nexport default UserPage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM;IAACC;EAAD,IAAgBN,UAAU,CAACI,SAAD,CAAhC;EACA,MAAM;IAACG;EAAD,IAAYP,UAAU,CAACI,SAAD,CAA5B;EACA,MAAM;IAACI;EAAD,IAAcR,UAAU,CAACI,SAAD,CAA9B;EACA,MAAM;IAACK;EAAD,IAAaT,UAAU,CAACI,SAAD,CAA7B;EACA,MAAM;IAACM;EAAD,IAAiBV,UAAU,CAACI,SAAD,CAAjC;EACA,MAAM;IAACO;EAAD,IAAiBX,UAAU,CAACI,SAAD,CAAjC;EACA,MAAM;IAACQ;EAAD,IAAkBZ,UAAU,CAACI,SAAD,CAAlC;EAGA,MAAMS,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;EAGAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,QAAL,EAAgB;MACZI,QAAQ,CAAC,QAAD,CAAR;IACH;EACF,CAJQ,EAIN,CAACJ,QAAD,EAAWI,QAAX,CAJM,CAAT;EAMAd,SAAS,CAAC,MAAM;IACd,IAAIU,QAAJ,EAAe;MACb,IAAIF,OAAJ,EAAa;QACXQ,YAAY,CAACR,OAAO,CAACS,MAAR,CAAeF,SAAS,IAAIA,SAAS,CAACG,OAAV,KAAsBX,WAAW,CAACY,EAA9D,CAAD,CAAZ;MACD;IACF;EACF,CANQ,EAMN,CAACT,QAAD,EAAWH,WAAW,CAACY,EAAvB,EAA2BX,OAA3B,CANM,CAAT;EASA,MAAMY,MAAM,GAAGL,SAAS,CAACM,GAAV,CAAcC,MAAM,iBAAI,QAAC,gBAAD;IAAoC,MAAM,EAAGA,MAA7C;IAAsD,QAAQ,EAAGZ,QAAjE;IAA4E,YAAY,EAAGE,YAA3F;IAA0G,aAAa,EAAGC;EAA1H,GAAwBS,MAAM,CAACH,EAA/B;IAAA;IAAA;IAAA;EAAA,QAAxB,CAAf;;EAIA,MAAMI,WAAW,GAAG,MAAM;IACxB,IAAIR,SAAJ,EAAe;MACb,OAAOA,SAAS,CAACM,GAAV,CAAcC,MAAM,iBAAI,QAAC,cAAD;QAAkC,MAAM,EAAGA,MAA3C;QAAoD,SAAS,EAAGb,SAAhE;QAA4E,YAAY,EAAGE,YAA3F;QAA0G,QAAQ,EAAGD;MAArH,GAAsBY,MAAM,CAACH,EAA7B;QAAA;QAAA;QAAA;MAAA,QAAxB,CAAP;IACD;EACF,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAK,EAAE,EAAC,eAAR;MAAA,uBACE;QAAK,EAAE,EAAC,UAAR;QAAA,uBACE;UAAA,mBAAUZ,WAAW,CAACiB,QAAtB;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAA,UACIJ;IADJ;MAAA;MAAA;MAAA;IAAA,QAPF,eAUE;MAAK,EAAE,EAAC,SAAR;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEIG,WAAW,EAFf;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAzDD;;GAAMjB,Q;UAUaJ,W;;;KAVbI,Q;AA2DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}