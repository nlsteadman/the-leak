{"ast":null,"code":"var _jsxFileName = \"/Users/endor/Flatiron/code/the-leak/client/src/components/UserReviewCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { headers, getToken, baseUrl } from './Globals';\nimport { MyContext } from '../context/MyContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserReviewCard = _ref => {\n  _s();\n\n  let {\n    review\n  } = _ref;\n  const {\n    locations\n  } = useContext(MyContext);\n  const {\n    updateReview\n  } = useContext(MyContext);\n  const {\n    loggedIn\n  } = useContext(MyContext);\n  const [content, setContent] = useState(\"\");\n  const navigate = useNavigate();\n  const locationInfo = locations.find(location => location.id === review.location_id);\n\n  const handleUpdate = () => {\n    const params = {\n      review: {\n        content: \"\"\n      }\n    };\n\n    if (loggedIn) {\n      fetch(baseUrl + \"/reviews/\" + review.id, {\n        method: \"PATCH\",\n        headers: { ...headers,\n          ...getToken()\n        },\n        body: JSON.stringify(params)\n      }).then(r => r.json()).then(data => {\n        setContent(updateReview(data));\n      });\n    }\n  };\n\n  const reviewContent = () => {\n    if (review.content) {\n      if (locationInfo) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"review-card\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"rainbow-ul\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: review.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: [\"- \", locationInfo.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate(`/reviews/update/${review.id}`),\n              children: \"Change Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdate,\n              children: \"Delete Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reviewContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserReviewCard, \"4YBN7DNVUBfqoRHhy0qzn+Ja0MU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserReviewCard;\nexport default UserReviewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReviewCard\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","headers","getToken","baseUrl","MyContext","UserReviewCard","review","locations","updateReview","loggedIn","content","setContent","navigate","locationInfo","find","location","id","location_id","handleUpdate","params","fetch","method","body","JSON","stringify","then","r","json","data","reviewContent","color","name"],"sources":["/Users/endor/Flatiron/code/the-leak/client/src/components/UserReviewCard.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { headers, getToken, baseUrl } from './Globals';\nimport { MyContext } from '../context/MyContext';\n\nconst UserReviewCard = ({ review }) => {\n  const {locations} = useContext(MyContext);\n  const {updateReview} = useContext(MyContext);\n  const {loggedIn} = useContext(MyContext);\n\n  const [content, setContent] = useState(\"\");\n  const navigate = useNavigate();\n\n\n  const locationInfo = locations.find(location => location.id === review.location_id)\n\n  const handleUpdate = () => {\n    const params = {\n      review: {\n        content: \"\"\n      }\n    }\n    \n    if (loggedIn) {\n      fetch(baseUrl + \"/reviews/\" + review.id, {\n        method: \"PATCH\",\n        headers: {\n          ...headers,\n          ...getToken()\n        },\n        body: JSON.stringify(params)\n      })\n        .then(r => r.json())\n        .then(data => {\n          setContent(updateReview(data));\n        })\n    }\n}\n\n  const reviewContent = () => {\n    if (review.content) {\n      if (locationInfo) {\n        return (\n          <div id=\"review-card\">\n            <ul id=\"rainbow-ul\">\n              <li>{ review.content }</li>\n              <p style={{color:\"red\"}}>- { locationInfo.name }</p>\n              <button onClick={ () => navigate(`/reviews/update/${ review.id }`) }>Change Review</button>\n              <button onClick={ handleUpdate } >Delete Review</button>\n            </ul>\n          </div>\n        )\n      }\n    }\n  }\n\n\n  return (\n    <div>\n        { reviewContent() }\n    </div>\n  )\n}\n\nexport default UserReviewCard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,OAA5B,QAA2C,WAA3C;AACA,SAASC,SAAT,QAA0B,sBAA1B;;;AAEA,MAAMC,cAAc,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EACrC,MAAM;IAACC;EAAD,IAAcR,UAAU,CAACK,SAAD,CAA9B;EACA,MAAM;IAACI;EAAD,IAAiBT,UAAU,CAACK,SAAD,CAAjC;EACA,MAAM;IAACK;EAAD,IAAaV,UAAU,CAACK,SAAD,CAA7B;EAEA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMc,QAAQ,GAAGZ,WAAW,EAA5B;EAGA,MAAMa,YAAY,GAAGN,SAAS,CAACO,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBV,MAAM,CAACW,WAAlD,CAArB;;EAEA,MAAMC,YAAY,GAAG,MAAM;IACzB,MAAMC,MAAM,GAAG;MACbb,MAAM,EAAE;QACNI,OAAO,EAAE;MADH;IADK,CAAf;;IAMA,IAAID,QAAJ,EAAc;MACZW,KAAK,CAACjB,OAAO,GAAG,WAAV,GAAwBG,MAAM,CAACU,EAAhC,EAAoC;QACvCK,MAAM,EAAE,OAD+B;QAEvCpB,OAAO,EAAE,EACP,GAAGA,OADI;UAEP,GAAGC,QAAQ;QAFJ,CAF8B;QAMvCoB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;MANiC,CAApC,CAAL,CAQGM,IARH,CAQQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARb,EASGF,IATH,CASQG,IAAI,IAAI;QACZjB,UAAU,CAACH,YAAY,CAACoB,IAAD,CAAb,CAAV;MACD,CAXH;IAYD;EACJ,CArBC;;EAuBA,MAAMC,aAAa,GAAG,MAAM;IAC1B,IAAIvB,MAAM,CAACI,OAAX,EAAoB;MAClB,IAAIG,YAAJ,EAAkB;QAChB,oBACE;UAAK,EAAE,EAAC,aAAR;UAAA,uBACE;YAAI,EAAE,EAAC,YAAP;YAAA,wBACE;cAAA,UAAMP,MAAM,CAACI;YAAb;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAG,KAAK,EAAE;gBAACoB,KAAK,EAAC;cAAP,CAAV;cAAA,iBAA6BjB,YAAY,CAACkB,IAA1C;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAQ,OAAO,EAAG,MAAMnB,QAAQ,CAAE,mBAAmBN,MAAM,CAACU,EAAI,EAAhC,CAAhC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE;cAAQ,OAAO,EAAGE,YAAlB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF;MAUD;IACF;EACF,CAfD;;EAkBA,oBACE;IAAA,UACMW,aAAa;EADnB;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAzDD;;GAAMxB,c;UAMaL,W;;;KANbK,c;AA2DN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}